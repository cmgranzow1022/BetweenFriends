@model IEnumerable<BetweenFriends.Models.BetweenFriends.Address>
    
@{
    ViewBag.Title = "MapView";
}
<head>
    <style>
        #map {
            height: 400px;
            width: 100%;
        }
    </style>
</head>

<br />
<h2>Map View</h2>
    <table class="table">

        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Street)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.City)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.State)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ZipCode)
            </th>
            <th></th>
        </tr>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Street)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.City)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.State)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ZipCode)
            </td>

        </tr>
    }
</table>
<br />
@using (Html.BeginForm())
{

}

    <h2>Central Location</h2>

<div id="map"></div>
@section Scripts {
    <script src="https://maps.googleapis.com/maps/api/js?key=[keyhere]">
    </script>
    <script>
        var addresses = @Html.Raw(Json.Encode(Model));
        var stringAddresses = [];
        for (var i = 0; i < addresses.length; i++)
        {
            var address = "";
            address += addresses[i].Street;
            address += " ";
            address += addresses[i].City;
            address += " ";
            address += addresses[i].State;
            address += " ";
            address += addresses[i].ZipCode;
            stringAddresses.push(address);

        }

        $(document).ready(function () {
            var map;
            var elevator;
            var myOptions = {
                zoom: 10,
                center: new google.maps.LatLng(43.020484, -88.063190),
                mapTypeId: 'terrain'
            };
            map = new google.maps.Map($('#map')[0], myOptions);

            latLngList = new Array();
            for (var x = 0; x < stringAddresses.length; x++) {
                $.getJSON('http://maps.googleapis.com/maps/api/geocode/json?address=' + stringAddresses[x] + '&sensor=false', null, function (data) {
                    var p = data.results[0].geometry.location;
                    var latlng = new google.maps.LatLng(p.lat, p.lng);
                    latLngList[x] = {'lat' : p.lat, 'lng' : p.lng}
                    new google.maps.Marker({
                        position: latlng,

                        map: map
                    });
                    map.center=latlng;
                });
            }
            var ll = new google.maps.LatLng(43.021033,-88.055988);
            new google.maps.Marker({
                position: ll,
                map: map,
                animation : google.maps.Animation.DROP,
                icon : 'http://maps.google.com/mapfiles/ms/icons/green-dot.png',
            });
        });
    </script>
    
    }

<br />
<br />

<div class="form-group">
    <div class="col-md-10">
        <p class="btn btn-default"> @Html.ActionLink("Get Restaurant", "RestaurantView", "Groups")</p>
    </div>
</div>
